CREATE OR REPLACE PACKAGE GEST_EMPLE
IS
	TYPE EMPLEADO IS TABLE OF HR.EMPLOYEES%ROWTYPE INDEX BY PLS_INTEGER;
	FUNCTION LISTA_EMPLEADOS(CADENA VARCHAR2) RETURN EMPLEADO;
	FUNCTION DATOS_EMPLEADOS(DEPARTAMENTO NUMBER) RETURN EMPLEADO;
	PROCEDURE CREAR_INDICE(TABLA VARCHAR2,INDICE VARCHAR2, COLUMNA VARCHAR2);
	PROCEDURE ACT_EMPLE (NUM_EMPLE NUMBER, NOMBRE_COLUMNA VARCHAR2, VALOR VARCHAR2);
END GEST_EMPLE;
/
CREATE OR REPLACE PACKAGE BODY GEST_EMPLE 
IS 	
	EMPLEADOS EMPLEADO;
	
----------------------------------------------------------------------

	FUNCTION LISTA_EMPLEADOS(CADENA VARCHAR2) RETURN EMPLEADO 
	IS 
	BEGIN
		EXECUTE IMMEDIATE CADENA BULK COLLECT INTO EMPLEADOS;
		RETURN EMPLEADOS;
	END;

----------------------------------------------------------------------
	
	FUNCTION DATOS_EMPLEADOS(DEPARTAMENTO NUMBER) RETURN EMPLEADO
	IS 
	COMANDO VARCHAR2(100);
	EMPLEADOS GEST_EMPLE.EMPLEADO;
    TYPE REF_CURSOR IS REF CURSOR;
    C1 REF_CURSOR;
    
	BEGIN
		COMANDO := 'SELECT * FROM HR.EMPLOYEES WHERE DEPARTMENT_ID = :DEPARTAMENTO';
		--EXECUTE IMMEDIATE COMANDO BULK COLLECT INTO EMPLEADOS USING DEPARTAMENTO; 
        OPEN C1 FOR COMANDO USING DEPARTAMENTO;
        FETCH C1 BULK COLLECT INTO EMPLEADOS;
        RETURN EMPLEADOS;
	END;

----------------------------------------------------------------------

	PROCEDURE CREAR_INDICE(TABLA VARCHAR2,INDICE VARCHAR2, COLUMNA VARCHAR2) 
	IS 
		ID_CURSOR INTEGER;
		NUM_FILAS INTEGER;
	BEGIN
		ID_CURSOR := DBMS_SQL.OPEN_CURSOR;
		DBMS_SQL.PARSE(ID_CURSOR, 'CREATE INDEX '||INDICE||' ON '||TABLA||'('||COLUMNA||')',DBMS_SQL.NATIVE);
		NUM_FILAS := DBMS_SQL.EXECUTE(ID_CURSOR);
	EXCEPTION WHEN OTHERS THEN RAISE_APPLICATION_ERROR(-2000,'ERROR DE EJECUCION'||SQLERRM);
	END;

----------------------------------------------------------------------

	PROCEDURE ACT_EMPLE (NUM_EMPLE NUMBER, NOMBRE_COLUMNA VARCHAR2, VALOR VARCHAR2) 
	IS 
		ID_CURSOR INTEGER;
		NUM_FILAS INTEGER;
	BEGIN
		ID_CURSOR := DBMS_SQL.OPEN_CURSOR;
		DBMS_SQL.PARSE(ID_CURSOR, 'UPDATE HR.COPY_EMPLOYEES SET '||NOMBRE_COLUMNA||'=:VALOR WHERE EMPLOYEE_ID = :NUM_EMPLE',DBMS_SQL.NATIVE);
		DBMS_SQL.BIND_VARIABLE(ID_CURSOR, ':VALOR',VALOR);
		DBMS_SQL.BIND_VARIABLE(ID_CURSOR, ':NUM_EMPLE',NUM_EMPLE);
	EXCEPTION WHEN OTHERS THEN RAISE_APPLICATION_ERROR(-20000,'ERROR DE EJECUCION SQL DINAMICO'||SQLERRM);
	END;

----------------------------------------------------------------------


END GEST_EMPLE;
/
DECLARE
    V_EMPLEADOS GEST_EMPLE.EMPLEADO;
BEGIN
    V_EMPLEADOS := GEST_EMPLE.LISTA_EMPLEADOS('SELECT * FROM HR.EMPLOYEES');
    
    FOR I IN 1..V_EMPLEADOS.COUNT() LOOP
        DBMS_OUTPUT.PUT_LINE(V_EMPLEADOS(i).FIRST_NAME||' '||V_EMPLEADOS(i).LAST_NAME||' '||V_EMPLEADOS(i).SALARY);
    END LOOP;
END;
/
DECLARE 
    EMPLEADOS GEST_EMPLE.EMPLEADO;
BEGIN
    EMPLEADOS := gest_emple.datos_empleados(60);
    FOR I IN 1..EMPLEADOS.COUNT() LOOP
        DBMS_OUTPUT.PUT_LINE(EMPLEADOS(i).first_name);
    END LOOP;
end;
